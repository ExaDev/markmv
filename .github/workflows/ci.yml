name: CI

on:
  push:
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-fix:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for fixable linting issues
        id: check-fixes
        run: |
          # Run npm run check and capture if it makes any changes
          git status --porcelain > before.txt
          npm run check || true
          git status --porcelain > after.txt
          
          # Check if there are any differences
          if ! diff before.txt after.txt >/dev/null; then
            echo "Linting fixes are available"
            echo "fixes-available=true" >> $GITHUB_OUTPUT
            # Reset changes for the actual fix step
            git checkout -- .
          else
            echo "No linting fixes needed"
            echo "fixes-available=false" >> $GITHUB_OUTPUT
          fi
          
          # Debug output
          echo "Before:"
          cat before.txt
          echo "After:"
          cat after.txt
          
          rm -f before.txt after.txt
          
      - name: Auto-fix linting issues
        if: steps.check-fixes.outputs.fixes-available == 'true'
        run: npm run check
          
      - name: Commit auto-fixes to source branch
        if: steps.check-fixes.outputs.fixes-available == 'true' && github.ref != 'refs/heads/main'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "style: auto-fix linting issues"
          git push
          
      - name: Create PR with auto-fixes for protected branch
        if: steps.check-fixes.outputs.fixes-available == 'true' && github.ref == 'refs/heads/main'
        run: |
          # Create a new branch for the fixes
          BRANCH_NAME="auto-fix/lint-$(date +%Y%m%d-%H%M%S)"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b "$BRANCH_NAME"
          git add .
          
          # Check if there are actually changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit after running lint fixes"
            exit 0
          fi
          
          git commit -m "style: auto-fix linting issues"
          git push origin "$BRANCH_NAME"
          
          # Create PR
          gh pr create \
            --title "style: auto-fix linting issues" \
            --body "$(cat <<'EOF'
          Automatically generated PR to fix linting issues detected in CI.
          
          **Fixed issues:**
          - Removed trailing whitespace
          - Fixed import ordering
          - Applied Biome formatting rules
          
          This PR was created automatically because linting issues were detected on the protected main branch.
          EOF
          )" \
            --head "$BRANCH_NAME" \
            --base main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: lint-fix
    if: always()
    permissions:
      contents: read
      security-events: write
      attestations: write
      id-token: write
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Cache TypeScript build
        uses: actions/cache@v4
        with:
          path: |
            dist/
            tsconfig.tsbuildinfo
          key: ${{ runner.os }}-tsc-${{ matrix.node-version }}-${{ hashFiles('src/**/*.ts', 'tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-tsc-${{ matrix.node-version }}-
            ${{ runner.os }}-tsc-
            
      - name: Cache test results
        uses: actions/cache@v4
        with:
          path: |
            coverage/
            .vitest/
          key: ${{ runner.os }}-test-${{ matrix.node-version }}-${{ hashFiles('src/**/*.ts', 'src/**/*.test.ts', 'vitest.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ matrix.node-version }}-
            ${{ runner.os }}-test-
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run lint (fast fail)
        run: npm run lint
        
      - name: Run type check (fast fail)
        run: npm run typecheck
        
      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true
        
      - name: Build
        run: npm run build
        
      - name: Run tests
        run: npm run test:run
        
      - name: Generate coverage report
        if: matrix.node-version == '20.x'
        run: npm run test:coverage
          
      # Generate SBOM and build attestation only for Node.js 20.x
      - name: Generate SBOM
        if: matrix.node-version == '20.x'
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: spdx-json
          
      - name: Submit dependency snapshot
        if: matrix.node-version == '20.x'
        uses: actions/dependency-review-action@v4
        continue-on-error: true
          
      - name: Create npm package
        if: matrix.node-version == '20.x'
        run: npm pack
        
      - name: Attest build provenance
        if: matrix.node-version == '20.x'
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: |
            dist/**/*
            *.tgz
            
      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            *.tgz
            *.sbom.spdx.json